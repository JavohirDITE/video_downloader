const { Telegraf, Markup } = require("telegraf")
const { exec } = require("child_process")
const fs = require("fs")
const path = require("path")
const util = require("util")
const express = require("express")

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º exec –≤ –ø—Ä–æ–º–∏—Å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const execPromise = util.promisify(exec)

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
const BOT_TOKEN = process.env.BOT_TOKEN
if (!BOT_TOKEN) {
  console.error("‚ùå –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
  console.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Railway –∏–ª–∏ –≤ —Ñ–∞–π–ª–µ .env")
  process.exit(1)
}

console.log("‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω, –¥–ª–∏–Ω–∞:", BOT_TOKEN.length)

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new Telegraf(BOT_TOKEN)

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è webhook
const app = express()
const PORT = process.env.PORT || 3000

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
const tempDir = path.join(__dirname, "temp")
if (!fs.existsSync(tempDir)) {
  fs.mkdirSync(tempDir, { recursive: true })
}

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π
const userSessions = new Map()

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function cleanupFiles(filePath) {
  try {
    if (fs.existsSync(filePath)) {
      fs.unlinkSync(filePath)
      console.log(`–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`)
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
function isValidUrl(string) {
  try {
    new URL(string)
    return true
  } catch (_) {
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
async function getVideoInfo(url) {
  const command = `yt-dlp --dump-json --no-playlist "${url}"`

  try {
    const { stdout } = await execPromise(command, { timeout: 30000 })
    const info = JSON.parse(stdout)
    return {
      title: info.title || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤–∏–¥–µ–æ",
      duration: info.duration || 0,
      uploader: info.uploader || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä",
      platform: info.extractor || "unknown",
      formats: info.formats || [],
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ:", error)
    return {
      title: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤–∏–¥–µ–æ",
      duration: 0,
      uploader: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä",
      platform: "unknown",
      formats: [],
    }
  }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –∫–∞—á–µ—Å—Ç–≤–∞
async function downloadVideo(url, outputPath, quality = "720") {
  let formatSelector

  // –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤
  switch (quality) {
    case "1080":
      formatSelector =
        "bestvideo[height<=1080][ext=mp4]+bestaudio[ext=m4a]/best[height<=1080][ext=mp4]/best[height<=1080]"
      break
    case "720":
      formatSelector = "bestvideo[height<=720][ext=mp4]+bestaudio[ext=m4a]/best[height<=720][ext=mp4]/best[height<=720]"
      break
    case "480":
      formatSelector = "bestvideo[height<=480][ext=mp4]+bestaudio[ext=m4a]/best[height<=480][ext=mp4]/best[height<=480]"
      break
    case "360":
      formatSelector = "bestvideo[height<=360][ext=mp4]+bestaudio[ext=m4a]/best[height<=360][ext=mp4]/best[height<=360]"
      break
    case "best":
      formatSelector = "best[ext=mp4]/best"
      break
    case "original":
      formatSelector = "best"
      break
    default:
      formatSelector = "bestvideo[height<=720][ext=mp4]+bestaudio[ext=m4a]/best[height<=720][ext=mp4]/best[height<=720]"
  }

  const ytDlpOptions = [
    "--no-playlist",
    `--format "${formatSelector}"`,
    '--user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"',
    '--referer "https://www.youtube.com/"',
    '--add-header "Accept-Language:en-US,en;q=0.9"',
    '--add-header "Accept-Encoding:gzip, deflate"',
    '--add-header "Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"',
    '--add-header "Connection:keep-alive"',
    '--add-header "Upgrade-Insecure-Requests:1"',
    "--extractor-retries 3",
    "--fragment-retries 3",
    "--retry-sleep 1",
    "--no-check-certificate",
    "--merge-output-format mp4",
    "--embed-subs",
    "--write-auto-sub",
  ].join(" ")

  const command = `yt-dlp ${ytDlpOptions} -o "${outputPath}" "${url}"`
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: yt-dlp —Å –∫–∞—á–µ—Å—Ç–≤–æ–º ${quality}p`)
  console.log(`–°–µ–ª–µ–∫—Ç–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞: ${formatSelector}`)

  try {
    const { stdout, stderr } = await execPromise(command, { timeout: 300000 })
    console.log("yt-dlp stdout:", stdout)
    if (stderr) console.log("yt-dlp stderr:", stderr)
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ yt-dlp:", error)

    // Fallback –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –≤–∏–¥–µ–æ —Å –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º
    console.log("–ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...")
    const fallbackSelector =
      quality === "360" ? "worst[ext=mp4]/worst" : `best[height<=${quality}][ext=mp4]/best[height<=${quality}]`
    const fallbackCommand = `yt-dlp --no-playlist --format "${fallbackSelector}" --user-agent "Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)" -o "${outputPath}" "${url}"`

    try {
      const { stdout, stderr } = await execPromise(fallbackCommand, { timeout: 300000 })
      console.log("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —É—Å–ø–µ—à–µ–Ω:", stdout)
      return true
    } catch (fallbackError) {
      console.error("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Ç–∞–∫–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:", fallbackError)
      throw error
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ
async function extractAudio(videoPath, audioPath, videoInfo) {
  const command = `ffmpeg -i "${videoPath}" -vn -acodec mp3 -ab 192k "${audioPath}" -y`
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: ${command}`)

  try {
    const { stdout, stderr } = await execPromise(command, { timeout: 180000 })
    console.log("ffmpeg stdout:", stdout)
    if (stderr) console.log("ffmpeg stderr:", stderr)
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ ffmpeg:", error)
    throw error
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
function createMainMenu() {
  return Markup.keyboard([
    ["üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ"],
    ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ", "‚ùì –ü–æ–º–æ—â—å"],
    ["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"],
  ]).resize()
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞
function createQualityMenu() {
  return Markup.keyboard([
    ["üî• 1080p (–õ—É—á—à–µ–µ)", "‚≠ê 720p (–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ)"],
    ["üì± 480p (–°—Ä–µ–¥–Ω–µ–µ)", "üíæ 360p (–≠–∫–æ–Ω–æ–º–∏—è)"],
    ["üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ", "üé¨ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ"],
    ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
  ]).resize()
}

// –ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –º–µ–Ω—é
bot.start((ctx) => {
  const welcomeMessage = `
üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ª—É—á—à–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ!

üåü –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –£–¥–æ–±–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ
‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º

üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
YouTube, TikTok, Instagram, Twitter, Facebook, VK –∏ 1000+ –¥—Ä—É–≥–∏—Ö!

üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ:`

  ctx.reply(welcomeMessage, createMainMenu())
})

// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
bot.command("help", (ctx) => {
  const helpMessage = `
üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞:

üé• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ"
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ

üéµ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—É–¥–∏–æ:
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ MP3 —Ñ–∞–π–ª

‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ:
‚Ä¢ –£–∑–Ω–∞–π—Ç–µ –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ—Ä, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:
‚Ä¢ 1080p - –õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ (–±–æ–ª—å—à–µ —Ä–∞–∑–º–µ—Ä)
‚Ä¢ 720p - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ)
‚Ä¢ 480p - –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
‚Ä¢ 360p - –≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞

‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 2 –ì–ë (–ª–∏–º–∏—Ç Telegram)
‚Ä¢ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 1-10 –º–∏–Ω—É—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞)
‚Ä¢ –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –¥–æ–ª—å—à–µ

üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:
YouTube, TikTok, Instagram, Twitter, Facebook, VK –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ!`

  ctx.reply(helpMessage, createMainMenu())
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–º–µ–Ω—é)
bot.on("text", async (ctx) => {
  const text = ctx.message.text
  const userId = ctx.from.id
  const session = userSessions.get(userId) || {}

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
  if (text === "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ") {
    ctx.reply(
      `üì• –†–µ–∂–∏–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n` +
        `–¢–µ–∫—É—â–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${session.quality || "720p"}\n\n` +
        `–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.\n` +
        `–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"`,
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "download_video", quality: session.quality || "720" })
    return
  }

  if (text === "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ") {
    ctx.reply(
      "üéµ –†–µ–∂–∏–º –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ.\n" +
        "–ê—É–¥–∏–æ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3 (192 kbps).",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "extract_audio" })
    return
  }

  if (text === "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ") {
    ctx.reply(
      "‚ÑπÔ∏è –†–µ–∂–∏–º –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" + "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "video_info" })
    return
  }

  if (text === "‚ùì –ü–æ–º–æ—â—å") {
    return ctx.replyWithHTML(
      `
üìñ <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞:</b>

üé• <b>–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:</b>
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ"
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ

üéµ <b>–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—É–¥–∏–æ:</b>
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ

‚öôÔ∏è <b>–ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:</b>
‚Ä¢ üî• 1080p - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
‚Ä¢ ‚≠ê 720p - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
‚Ä¢ üì± 480p - –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
‚Ä¢ üíæ 360p - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä

‚ö†Ô∏è <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 2 –ì–ë (–ª–∏–º–∏—Ç Telegram)
‚Ä¢ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 1-10 –º–∏–Ω—É—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞)
‚Ä¢ –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –¥–æ–ª—å—à–µ

üåê <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:</b>
YouTube, TikTok, Instagram, Twitter, Facebook, VK –∏ 1000+ –¥—Ä—É–≥–∏—Ö!`,
      createMainMenu(),
    )
  }

  if (text === "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞") {
    ctx.reply(
      `‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:\n\n` +
        `–¢–µ–∫—É—â–µ–µ: ${session.quality || "720"}p\n\n` +
        `üî• 1080p - –õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ (–±–æ–ª—å—à–µ —Ä–∞–∑–º–µ—Ä)\n` +
        `‚≠ê 720p - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n` +
        `üì± 480p - –°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n` +
        `üíæ 360p - –≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞`,
      createQualityMenu(),
    )
    return
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞
  if (text.includes("1080p")) {
    userSessions.set(userId, { ...session, quality: "1080" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 1080p (–õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)", createMainMenu())
    return
  }
  if (text.includes("720p")) {
    userSessions.set(userId, { ...session, quality: "720" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 720p (–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ)", createMainMenu())
    return
  }
  if (text.includes("480p")) {
    userSessions.set(userId, { ...session, quality: "480" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 480p (–°—Ä–µ–¥–Ω–µ–µ)", createMainMenu())
    return
  }
  if (text.includes("360p")) {
    userSessions.set(userId, { ...session, quality: "360" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 360p (–≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞)", createMainMenu())
    return
  }

  if (text.includes("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ")) {
    userSessions.set(userId, { ...session, quality: "best" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª!)", createMainMenu())
    return
  }
  if (text.includes("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ")) {
    userSessions.set(userId, { ...session, quality: "original" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (–±–µ–∑ –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è)", createMainMenu())
    return
  }

  if (text === "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é") {
    ctx.reply("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", createMainMenu())
    userSessions.delete(userId)
    return
  }

  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /, –Ω–æ —ç—Ç–æ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
  if (text.startsWith("/")) {
    return ctx.reply("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.", createMainMenu())
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–æ–π
  if (!isValidUrl(text)) {
    return ctx.reply(
      "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.\n\n" + "–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
      createMainMenu(),
    )
  }

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  if (session.action === "download_video") {
    await handleVideoDownload(ctx, text, session.quality || "720")
  } else if (session.action === "extract_audio") {
    await handleAudioExtraction(ctx, text)
  } else if (session.action === "video_info") {
    await handleVideoInfo(ctx, text)
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    ctx.reply("üí° –Ø –≤–∏–∂—É —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:", createMainMenu())
  }
})

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
async function handleVideoDownload(ctx, url, quality) {
  let processingMessage
  try {
    processingMessage = await ctx.reply(
      `‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ ${quality}p...\n` +
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 5 –º–∏–Ω—É—Ç.\n\n" +
        `üìä –í—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${quality}p\n` +
        `üîÑ –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"`,
    )
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    const videoInfo = await getVideoInfo(url)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const timestamp = Date.now()
    const videoFileName = `video_${timestamp}.%(ext)s`
    const videoPath = path.join(tempDir, videoFileName)

    console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: ${url}`)
    console.log(`–ö–∞—á–µ—Å—Ç–≤–æ: ${quality}p`)

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    await downloadVideo(url, videoPath, quality)

    // –ò—â–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    const files = fs.readdirSync(tempDir).filter((file) => file.startsWith(`video_${timestamp}`))

    if (files.length === 0) {
      throw new Error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    }

    const actualVideoPath = path.join(tempDir, files[0])
    const fileStats = fs.statSync(actualVideoPath)
    const fileSizeMB = fileStats.size / (1024 * 1024)

    console.log(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSizeMB.toFixed(2)} –ú–ë`)

    // –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ —Ä–∞–∑–º–µ—Ä–µ —Ñ–∞–π–ª–∞
    if (fileSizeMB > 50) {
      await ctx.reply(
        `‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –§–∞–π–ª –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–æ–π: ${fileSizeMB.toFixed(2)} –ú–ë\n` + `–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏...`,
      )
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä (2 –ì–ë - –ª–∏–º–∏—Ç Telegram)
    if (fileSizeMB > 2048) {
      cleanupFiles(actualVideoPath)
      return await ctx.reply(
        `‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: ${fileSizeMB.toFixed(2)} –ú–ë\n` +
          `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è Telegram: 2 –ì–ë\n` +
          `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –º–µ–Ω—å—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ.`,
        createMainMenu(),
      )
    }

    try {
      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, "üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    const caption =
      `‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ!\n\n` +
      `üìπ ${videoInfo.title}\n` +
      `üë§ ${videoInfo.uploader}\n` +
      `üìä –ö–∞—á–µ—Å—Ç–≤–æ: ${quality}p\n` +
      `üíæ –†–∞–∑–º–µ—Ä: ${fileSizeMB.toFixed(2)} –ú–ë`

    await ctx.replyWithVideo(
      { source: actualVideoPath },
      {
        caption,
        reply_markup: createMainMenu().reply_markup,
      },
    )

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    cleanupFiles(actualVideoPath)

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.deleteMessage(processingMessage.message_id)
    } catch (deleteError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ")
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ."

    if (error.message.includes("403") || error.message.includes("Forbidden")) {
      errorMessage = "‚ùå YouTube –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∏—Ç–µ –∞—É–¥–∏–æ."
    } else if (error.message.includes("Video unavailable")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ."
    } else if (error.message.includes("Unsupported URL")) {
      errorMessage = "‚ùå –î–∞–Ω–Ω—ã–π —Å–∞–π—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."
    }

    ctx.reply(errorMessage, createMainMenu())
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ
async function handleAudioExtraction(ctx, url) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("‚è≥ –ò–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 5 –º–∏–Ω—É—Ç.")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    const videoInfo = await getVideoInfo(url)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    const timestamp = Date.now()
    const videoFileName = `video_${timestamp}.%(ext)s`
    const videoPath = path.join(tempDir, videoFileName)

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
    let audioFileName
    if (videoInfo.platform.toLowerCase().includes("youtube")) {
      // –î–ª—è YouTube –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
      const cleanTitle = videoInfo.title
        .replace(/[^\w\s-]/g, "") // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        .replace(/\s+/g, "_") // –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
        .substring(0, 50) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
      audioFileName = `${cleanTitle}.mp3`
    } else {
      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø—Ä–æ—Å—Ç–æ "audio"
      audioFileName = `audio_${timestamp}.mp3`
    }

    const audioPath = path.join(tempDir, audioFileName)

    console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –¥–ª—è –∞—É–¥–∏–æ: ${url}`)

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –Ω–∏–∑–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ –¥–ª—è –∞—É–¥–∏–æ
    await downloadVideo(url, videoPath, "360")

    // –ò—â–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    const files = fs.readdirSync(tempDir).filter((file) => file.startsWith(`video_${timestamp}`))

    if (files.length === 0) {
      throw new Error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    }

    const actualVideoPath = path.join(tempDir, files[0])

    try {
      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, "üéµ –ò–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ...")
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—É–¥–∏–æ
    await extractAudio(actualVideoPath, audioPath, videoInfo)

    const audioStats = fs.statSync(audioPath)
    const audioSizeMB = audioStats.size / (1024 * 1024)

    console.log(`–†–∞–∑–º–µ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞: ${audioSizeMB.toFixed(2)} –ú–ë`)

    // –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ —Ä–∞–∑–º–µ—Ä–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
    if (audioSizeMB > 50) {
      await ctx.reply(
        `‚ö†Ô∏è –ê—É–¥–∏–æ —Ñ–∞–π–ª –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–æ–π: ${audioSizeMB.toFixed(2)} –ú–ë\n` + `–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏...`,
      )
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –∞—É–¥–∏–æ (2 –ì–ë)
    if (audioSizeMB > 2048) {
      cleanupFiles(actualVideoPath)
      cleanupFiles(audioPath)
      return await ctx.reply(
        `‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: ${audioSizeMB.toFixed(2)} –ú–ë\n` +
          `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è Telegram: 2 –ì–ë\n` +
          `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–¥–µ–æ –ø–æ–∫–æ—Ä–æ—á–µ.`,
        createMainMenu(),
      )
    }

    try {
      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, "üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∞—É–¥–∏–æ...")
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    const caption =
      `‚úÖ –ê—É–¥–∏–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ!\n\n` +
      `üéµ ${videoInfo.title}\n` +
      `üë§ ${videoInfo.uploader}\n` +
      `üíæ –†–∞–∑–º–µ—Ä: ${audioSizeMB.toFixed(2)} –ú–ë`

    await ctx.replyWithAudio(
      { source: audioPath },
      {
        caption,
        title: videoInfo.title,
        performer: videoInfo.uploader,
        reply_markup: createMainMenu().reply_markup,
      },
    )

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cleanupFiles(actualVideoPath)
    cleanupFiles(audioPath)

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.deleteMessage(processingMessage.message_id)
    } catch (deleteError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ")
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ."

    if (error.message.includes("403") || error.message.includes("Forbidden")) {
      errorMessage = "‚ùå YouTube –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ."
    } else if (error.message.includes("Video unavailable")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ."
    }

    ctx.reply(errorMessage, createMainMenu())
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
async function handleVideoInfo(ctx, url) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("‚è≥ –ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ...")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    const videoInfo = await getVideoInfo(url)

    const duration = videoInfo.duration
      ? `${Math.floor(videoInfo.duration / 60)}:${(videoInfo.duration % 60).toString().padStart(2, "0")}`
      : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞
    const availableQualities = []
    if (videoInfo.formats && videoInfo.formats.length > 0) {
      const heights = [
        ...new Set(
          videoInfo.formats
            .filter((f) => f.height)
            .map((f) => f.height)
            .sort((a, b) => b - a),
        ),
      ]

      if (heights.length > 0) {
        availableQualities.push(`–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: ${heights.join("p, ")}p`)
      }
    }

    const infoMessage = `
‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ:

üìπ **–ù–∞–∑–≤–∞–Ω–∏–µ:** ${videoInfo.title}
üë§ **–ê–≤—Ç–æ—Ä:** ${videoInfo.uploader}
‚è± **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** ${duration}
üåê **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** ${videoInfo.platform}
${availableQualities.length > 0 ? `üìä ${availableQualities[0]}` : ""}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:`

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, infoMessage, {
      reply_markup: createMainMenu().reply_markup,
    })
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:", error)
    ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ.", createMainMenu())
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error("–û—à–∏–±–∫–∞ –±–æ—Ç–∞:", err)
  if (ctx) {
    try {
      ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", createMainMenu())
    } catch (replyError) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:", replyError)
    }
  }
})

// –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function cleanupTempDir() {
  try {
    const files = fs.readdirSync(tempDir)
    files.forEach((file) => {
      const filePath = path.join(tempDir, file)
      fs.unlinkSync(filePath)
    })
    console.log("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")
  } catch (error) {
    console.log("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:", error)
  }
}

// –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
cleanupTempDir()

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç)
setInterval(cleanupTempDir, 30 * 60 * 1000)

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π (–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç)
setInterval(
  () => {
    console.log(`–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${userSessions.size}`)
  },
  10 * 60 * 1000,
)

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Railway
app.use(express.json())

// Health check endpoint
app.get("/", (req, res) => {
  res.send("ü§ñ Improved Telegram Video Downloader Bot with Menu is running!")
})

// Webhook endpoint
app.post(`/webhook/${BOT_TOKEN}`, (req, res) => {
  bot.handleUpdate(req.body)
  res.sendStatus(200)
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)

  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    const webhookUrl = process.env.RAILWAY_STATIC_URL
      ? `https://${process.env.RAILWAY_STATIC_URL}/webhook/${BOT_TOKEN}`
      : `http://localhost:${PORT}/webhook/${BOT_TOKEN}`

    console.log(`üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: ${webhookUrl}`)
    await bot.telegram.setWebhook(webhookUrl)
    console.log("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe()
    console.log(`‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –±–æ—Ç —Å –º–µ–Ω—é @${botInfo.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!`)
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", error)

    // –ï—Å–ª–∏ webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
    console.log("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ polling...")
    try {
      await bot.telegram.deleteWebhook()
      await bot.launch()
      console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling!")
    } catch (pollingError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ polling:", pollingError)
      process.exit(1)
    }
  }
})

// Graceful shutdown
process.once("SIGINT", () => {
  console.log("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")
  bot.stop("SIGINT")
  process.exit(0)
})

process.once("SIGTERM", () => {
  console.log("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")
  bot.stop("SIGTERM")
  process.exit(0)
})
