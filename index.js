const { Telegraf, Markup } = require("telegraf")
const { exec } = require("child_process")
const fs = require("fs")
const path = require("path")
const util = require("util")
const express = require("express")
const axios = require("axios")
const FormData = require("form-data")
const crypto = require("crypto")

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º exec –≤ –ø—Ä–æ–º–∏—Å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const execPromise = util.promisify(exec)

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
const BOT_TOKEN = process.env.BOT_TOKEN
if (!BOT_TOKEN) {
  console.error("‚ùå –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
  console.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Railway –∏–ª–∏ –≤ —Ñ–∞–π–ª–µ .env")
  process.exit(1)
}

// ACRCloud –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const ACRCLOUD_CONFIG = {
  host: process.env.ACRCLOUD_HOST || "identify-ap-southeast-1.acrcloud.com",
  access_key: process.env.ACRCLOUD_ACCESS_KEY,
  access_secret: process.env.ACRCLOUD_ACCESS_SECRET,
  timeout: 10000,
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ACRCloud
if (!ACRCLOUD_CONFIG.access_key || !ACRCLOUD_CONFIG.access_secret) {
  console.warn("‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: ACRCloud API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
  console.warn("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ACRCLOUD_ACCESS_KEY –∏ ACRCLOUD_ACCESS_SECRET –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.")
}

console.log("‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω, –¥–ª–∏–Ω–∞:", BOT_TOKEN.length)
console.log("üéµ ACRCloud –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", ACRCLOUD_CONFIG.access_key ? "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã" : "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new Telegraf(BOT_TOKEN)

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è webhook
const app = express()
const PORT = process.env.PORT || 3000

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
const tempDir = path.join(__dirname, "temp")
if (!fs.existsSync(tempDir)) {
  fs.mkdirSync(tempDir, { recursive: true })
}

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π
const userSessions = new Map()

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤
const MAX_VIDEO_SIZE_MB = 45 // –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–ª—è Telegram –ª–∏–º–∏—Ç–∞ –≤ 50 –ú–ë
const MAX_DOCUMENT_SIZE_MB = 2000 // 2 –ì–ë –ª–∏–º–∏—Ç Telegram
const TARGET_SIZE_MB = 25 // –¶–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
const MAX_AUDIO_DURATION_FOR_RECOGNITION = 60 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è (—Å–µ–∫—É–Ω–¥—ã)

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
const ITUNES_SEARCH_URL = "https://itunes.apple.com/search"
const LASTFM_API_URL = "https://ws.audioscrobbler.com/2.0/"
const LASTFM_API_KEY = process.env.LASTFM_API_KEY || "your_lastfm_api_key_here" // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function cleanupFiles(filePath) {
  try {
    if (fs.existsSync(filePath)) {
      fs.unlinkSync(filePath)
      console.log(`–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`)
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
function isValidUrl(string) {
  try {
    new URL(string)
    return true
  } catch (_) {
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ URL
function detectPlatform(url) {
  const urlLower = url.toLowerCase()

  if (urlLower.includes("youtube.com") || urlLower.includes("youtu.be")) {
    return "youtube"
  } else if (
    urlLower.includes("tiktok.com") ||
    urlLower.includes("vm.tiktok.com") ||
    urlLower.includes("vt.tiktok.com")
  ) {
    return "tiktok"
  } else if (urlLower.includes("instagram.com")) {
    return "instagram"
  } else if (urlLower.includes("twitter.com") || urlLower.includes("x.com")) {
    return "twitter"
  } else if (urlLower.includes("facebook.com") || urlLower.includes("fb.com")) {
    return "facebook"
  } else if (urlLower.includes("vk.com")) {
    return "vk"
  } else {
    return "other"
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏ ACRCloud
function buildStringToSign(method, uri, accessKey, dataType, signatureVersion, timestamp) {
  return [method, uri, accessKey, dataType, signatureVersion, timestamp].join("\n")
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
function sign(signString, accessSecret) {
  return crypto.createHmac("sha1", accessSecret).update(Buffer.from(signString, "utf-8")).digest().toString("base64")
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ —á–µ—Ä–µ–∑ ACRCloud API
async function recognizeMusic(audioBuffer) {
  if (!ACRCLOUD_CONFIG.access_key || !ACRCLOUD_CONFIG.access_secret) {
    throw new Error("ACRCloud API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
  }

  const method = "POST"
  const uri = "/v1/identify"
  const dataType = "audio"
  const signatureVersion = "1"
  const timestamp = new Date().getTime()

  const stringToSign = buildStringToSign(method, uri, ACRCLOUD_CONFIG.access_key, dataType, signatureVersion, timestamp)
  const signature = sign(stringToSign, ACRCLOUD_CONFIG.access_secret)

  const formData = new FormData()
  formData.append("sample", audioBuffer, {
    filename: "sample.wav",
    contentType: "audio/wav",
  })
  formData.append("access_key", ACRCLOUD_CONFIG.access_key)
  formData.append("data_type", dataType)
  formData.append("signature_version", signatureVersion)
  formData.append("signature", signature)
  formData.append("sample_bytes", audioBuffer.length.toString())
  formData.append("timestamp", timestamp.toString())

  try {
    const response = await axios.post(`https://${ACRCLOUD_CONFIG.host}${uri}`, formData, {
      headers: {
        ...formData.getHeaders(),
      },
      timeout: ACRCLOUD_CONFIG.timeout,
    })

    return response.data
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ ACRCloud API:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ —á–µ—Ä–µ–∑ iTunes API
async function searchMusicItunes(query, entity = "song", limit = 10) {
  try {
    const response = await axios.get(ITUNES_SEARCH_URL, {
      params: {
        term: query,
        entity: entity,
        limit: limit,
        country: "US",
        media: "music",
      },
      timeout: 10000,
    })

    return response.data.results || []
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ iTunes:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è —á–µ—Ä–µ–∑ Last.fm (–µ—Å–ª–∏ API –∫–ª—é—á –¥–æ—Å—Ç—É–ø–µ–Ω)
async function searchArtistTopTracks(artist, limit = 10) {
  if (!LASTFM_API_KEY || LASTFM_API_KEY === "your_lastfm_api_key_here") {
    // –ï—Å–ª–∏ –Ω–µ—Ç Last.fm API, –∏—Å–ø–æ–ª—å–∑—É–µ–º iTunes
    return await searchMusicItunes(`${artist}`, "song", limit)
  }

  try {
    const response = await axios.get(LASTFM_API_URL, {
      params: {
        method: "artist.gettoptracks",
        artist: artist,
        api_key: LASTFM_API_KEY,
        format: "json",
        limit: limit,
      },
      timeout: 10000,
    })

    if (response.data.toptracks && response.data.toptracks.track) {
      return response.data.toptracks.track.map((track) => ({
        trackName: track.name,
        artistName: track.artist.name,
        playcount: track.playcount,
        url: track.url,
      }))
    }

    return []
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ Last.fm:", error)
    // Fallback –Ω–∞ iTunes
    return await searchMusicItunes(`${artist}`, "song", limit)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function formatSearchResults(results, searchType) {
  if (!results || results.length === 0) {
    return "‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
  }

  let message = `üéµ –ù–∞–π–¥–µ–Ω–æ ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:\n\n`

  // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 8 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Ö –Ω—É–º–µ—Ä—É–µ–º
  const limitedResults = results.slice(0, 8)

  limitedResults.forEach((result, index) => {
    const number = index + 1

    if (result.trackName || result.trackCensoredName) {
      // iTunes —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const trackName = result.trackName || result.trackCensoredName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç—Ä–µ–∫"
      const artistName = result.artistName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"
      const albumName = result.collectionName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–ª—å–±–æ–º"
      const releaseDate = result.releaseDate ? new Date(result.releaseDate).getFullYear() : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

      let duration = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
      if (result.trackTimeMillis) {
        const minutes = Math.floor(result.trackTimeMillis / 60000)
        const seconds = Math.floor((result.trackTimeMillis % 60000) / 1000)
        duration = `${minutes}:${seconds.toString().padStart(2, "0")}`
      }

      message += `${number}. üéµ **${trackName}**\n`
      message += `   üë§ ${artistName}\n`
      message += `   üíø ${albumName} (${releaseDate})\n`
      message += `   ‚è± ${duration}\n`

      if (result.trackViewUrl) {
        message += `   üîó [iTunes](${result.trackViewUrl})\n`
      }
      if (result.previewUrl) {
        message += `   üéß [–ü—Ä–µ–≤—å—é 30—Å–µ–∫](${result.previewUrl})\n`
      }
      message += `\n`
    } else if (result.playcount) {
      // Last.fm —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      message += `${number}. üéµ **${result.trackName}**\n`
      message += `   üë§ ${result.artistName}\n`
      message += `   üìä –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–π: ${Number.parseInt(result.playcount).toLocaleString()}\n`
      if (result.url) {
        message += `   üîó [Last.fm](${result.url})\n`
      }
      message += `\n`
    }
  })

  if (results.length > 8) {
    message += `... –∏ –µ—â–µ ${results.length - 8} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n\n`
  }

  message += `üí° –°–æ–≤–µ—Ç: –î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å - –ù–∞–∑–≤–∞–Ω–∏–µ"`

  return message
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤
async function getPopularTracks() {
  try {
    // –ü–æ–∏—Å–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤ —Ä–∞–∑–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
    const genres = ["pop", "rock", "hip-hop", "electronic", "indie", "country", "r&b"]
    const randomGenre = genres[Math.floor(Math.random() * genres.length)]

    const results = await searchMusicItunes(randomGenre, "song", 20)

    // –§–∏–ª—å—Ç—Ä—É–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const filteredResults = results
      .filter((track) => track.trackName && track.artistName) // –£–±–∏—Ä–∞–µ–º —Ç—Ä–µ–∫–∏ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
      .sort((a, b) => {
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏)
        const aScore = (a.trackPrice || 0) + (a.collectionPrice || 0)
        const bScore = (b.trackPrice || 0) + (b.collectionPrice || 0)
        return bScore - aScore
      })

    return filteredResults.slice(0, 10)
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∞—É–¥–∏–æ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
async function convertAudioForRecognition(inputPath, outputPath) {
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ WAV 16kHz mono –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
  const command = `ffmpeg -i "${inputPath}" -ar 16000 -ac 1 -f wav "${outputPath}" -y`
  console.log(`–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∞—É–¥–∏–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: ${command}`)

  try {
    const { stdout, stderr } = await execPromise(command, { timeout: 60000 })
    console.log("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∞—É–¥–∏–æ:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
async function getVideoInfo(url) {
  const command = `yt-dlp --dump-json --no-playlist "${url}"`

  try {
    const { stdout } = await execPromise(command, { timeout: 30000 })
    const info = JSON.parse(stdout)
    return {
      title: info.title || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤–∏–¥–µ–æ",
      duration: info.duration || 0,
      uploader: info.uploader || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä",
      platform: info.extractor || "unknown",
      formats: info.formats || [],
      filesize: info.filesize || 0,
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ:", error)
    return {
      title: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –≤–∏–¥–µ–æ",
      duration: 0,
      uploader: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä",
      platform: "unknown",
      formats: [],
      filesize: 0,
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ
function getOptimalQuality(duration, requestedQuality) {
  // –ï—Å–ª–∏ –≤–∏–¥–µ–æ –¥–ª–∏–Ω–Ω–æ–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–Ω–∏–∂–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
  if (duration > 600) {
    // –ë–æ–ª—å—à–µ 10 –º–∏–Ω—É—Ç
    if (requestedQuality === "1080") return "720"
    if (requestedQuality === "720") return "480"
  }

  if (duration > 1200) {
    // –ë–æ–ª—å—à–µ 20 –º–∏–Ω—É—Ç
    if (requestedQuality === "1080" || requestedQuality === "720") return "480"
    if (requestedQuality === "480") return "360"
  }

  return requestedQuality
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º –∫–∞—á–µ—Å—Ç–≤–∞
async function downloadVideoWithSizeControl(url, outputPath, requestedQuality = "720", maxSizeMB = MAX_VIDEO_SIZE_MB) {
  const videoInfo = await getVideoInfo(url)
  const platform = detectPlatform(url)
  const quality = getOptimalQuality(videoInfo.duration, requestedQuality)

  console.log(`–ó–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${requestedQuality}p, –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ: ${quality}p`)
  console.log(`–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ: ${videoInfo.duration} —Å–µ–∫—É–Ω–¥`)
  console.log(`–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}`)

  // –°–ø–∏—Å–æ–∫ –∫–∞—á–µ—Å—Ç–≤ –¥–ª—è –ø–æ–ø—ã—Ç–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  let qualityFallback

  if (platform === "tiktok" || platform === "instagram" || platform === "twitter") {
    // –î–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
    qualityFallback = {
      1080: ["best", "worst"],
      720: ["best", "worst"],
      480: ["worst", "best"],
      360: ["worst"],
      best: ["best", "worst"],
      original: ["best", "worst"],
      auto: ["best", "worst"],
    }
  } else {
    // –î–ª—è YouTube –∏ –¥—Ä—É–≥–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
    qualityFallback = {
      1080: ["1080", "720", "480", "360"],
      720: ["720", "480", "360"],
      480: ["480", "360"],
      360: ["360"],
      best: ["720", "480", "360"],
      original: ["720", "480", "360"],
      auto: ["720", "480", "360"],
    }
  }

  const qualitiesToTry = qualityFallback[quality] || ["best", "worst"]

  for (const currentQuality of qualitiesToTry) {
    try {
      console.log(`–ü—Ä–æ–±—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ: ${currentQuality} –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ${platform}`)

      const success = await downloadVideo(url, outputPath, currentQuality)
      if (!success) continue

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–∫–∞—á–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
      const files = fs
        .readdirSync(tempDir)
        .filter((file) => file.includes(path.basename(outputPath, path.extname(outputPath))))

      if (files.length === 0) continue

      const actualPath = path.join(tempDir, files[0])
      const stats = fs.statSync(actualPath)
      const sizeMB = stats.size / (1024 * 1024)

      console.log(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ ${currentQuality}: ${sizeMB.toFixed(2)} –ú–ë`)

      if (sizeMB <= maxSizeMB) {
        console.log(`‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ ${currentQuality} –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ä–∞–∑–º–µ—Ä—É`)
        return { success: true, actualPath, sizeMB, quality: currentQuality, platform }
      } else {
        console.log(`‚ùå –ö–∞—á–µ—Å—Ç–≤–æ ${currentQuality} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, –ø—Ä–æ–±—É–µ–º –º–µ–Ω—å—à–µ`)
        cleanupFiles(actualPath)
        continue
      }
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ ${currentQuality}:`, error)

      // –î–ª—è TikTok –∏ –¥—Ä—É–≥–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä
      if (platform === "tiktok" || platform === "instagram") {
        try {
          console.log(`–ü—Ä–æ–±—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è ${platform}...`)
          const simpleSuccess = await downloadVideoSimple(url, outputPath)
          if (simpleSuccess) {
            const files = fs
              .readdirSync(tempDir)
              .filter((file) => file.includes(path.basename(outputPath, path.extname(outputPath))))

            if (files.length > 0) {
              const actualPath = path.join(tempDir, files[0])
              const stats = fs.statSync(actualPath)
              const sizeMB = stats.size / (1024 * 1024)

              if (sizeMB <= MAX_DOCUMENT_SIZE_MB) {
                return { success: true, actualPath, sizeMB, quality: "auto", platform, asDocument: sizeMB > maxSizeMB }
              }
            }
          }
        } catch (simpleError) {
          console.error("–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Ç–∞–∫–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:", simpleError)
        }
      }
      continue
    }
  }

  return { success: false, error: `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ${platform}` }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
async function downloadVideo(url, outputPath, quality = "720") {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø–æ URL
  const platform = detectPlatform(url)
  let formatSelector

  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
  if (platform === "tiktok") {
    // TikTok –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    switch (quality) {
      case "1080":
      case "720":
        formatSelector = "best[ext=mp4]/best"
        break
      case "480":
      case "360":
        formatSelector = "worst[ext=mp4]/worst"
        break
      default:
        formatSelector = "best[ext=mp4]/best"
    }
  } else if (platform === "instagram") {
    // Instagram —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã
    switch (quality) {
      case "1080":
        formatSelector = "best[height<=1080]/best"
        break
      case "720":
        formatSelector = "best[height<=720]/best"
        break
      case "480":
        formatSelector = "best[height<=480]/best"
        break
      case "360":
        formatSelector = "worst/best"
        break
      default:
        formatSelector = "best[height<=720]/best"
    }
  } else if (platform === "twitter") {
    // Twitter/X —Ñ–æ—Ä–º–∞—Ç—ã
    formatSelector = quality === "360" ? "worst[ext=mp4]/worst" : "best[ext=mp4]/best"
  } else {
    // YouTube –∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–æ—Ä–º–∞—Ç–æ–≤
    switch (quality) {
      case "1080":
        formatSelector =
          "bestvideo[height<=1080][filesize<50M][ext=mp4]+bestaudio[ext=m4a]/best[height<=1080][filesize<50M][ext=mp4]/best[height<=1080]"
        break
      case "720":
        formatSelector =
          "bestvideo[height<=720][filesize<35M][ext=mp4]+bestaudio[ext=m4a]/best[height<=720][filesize<35M][ext=mp4]/best[height<=720]"
        break
      case "480":
        formatSelector =
          "bestvideo[height<=480][filesize<25M][ext=mp4]+bestaudio[ext=m4a]/best[height<=480][filesize<25M][ext=mp4]/best[height<=480]"
        break
      case "360":
        formatSelector =
          "bestvideo[height<=360][filesize<15M][ext=mp4]+bestaudio[ext=m4a]/best[height<=360][filesize<15M][ext=mp4]/best[height<=360]"
        break
      case "best":
        formatSelector = "best[filesize<35M][ext=mp4]/best[ext=mp4]"
        break
      case "original":
        formatSelector = "best"
        break
      default:
        formatSelector =
          "bestvideo[height<=720][filesize<35M][ext=mp4]+bestaudio[ext=m4a]/best[height<=720][filesize<35M][ext=mp4]/best[height<=720]"
    }
  }

  const ytDlpOptions = [
    "--no-playlist",
    `--format "${formatSelector}"`,
    '--user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"',
    "--extractor-retries 3",
    "--fragment-retries 3",
    "--retry-sleep 1",
    "--no-check-certificate",
    "--no-write-sub",
    "--no-write-auto-sub",
    "--limit-rate 10M",
  ]

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ–ø—Ü–∏–∏
  if (platform === "youtube") {
    ytDlpOptions.push('--referer "https://www.youtube.com/"')
    ytDlpOptions.push("--merge-output-format mp4")
  } else if (platform === "tiktok") {
    // TikTok –Ω–µ –Ω—É–∂–µ–Ω merge, —Ç–∞–∫ –∫–∞–∫ –≤–∏–¥–µ–æ —É–∂–µ –≤ mp4
    ytDlpOptions.push('--add-header "Accept-Language:en-US,en;q=0.9"')
  } else if (platform === "instagram") {
    ytDlpOptions.push("--merge-output-format mp4")
  } else {
    ytDlpOptions.push("--merge-output-format mp4")
  }

  const command = `yt-dlp ${ytDlpOptions.join(" ")} -o "${outputPath}" "${url}"`
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: yt-dlp —Å –∫–∞—á–µ—Å—Ç–≤–æ–º ${quality}p –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ${platform}`)

  try {
    const { stdout, stderr } = await execPromise(command, { timeout: 300000 })
    console.log("yt-dlp –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    if (stderr && !stderr.includes("WARNING")) {
      console.log("yt-dlp stderr:", stderr)
    }
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ yt-dlp:", error)
    throw error
  }
}

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
async function downloadVideoSimple(url, outputPath) {
  const command = `yt-dlp --no-playlist -f "best" --no-check-certificate -o "${outputPath}" "${url}"`
  console.log("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ yt-dlp")

  try {
    const { stdout, stderr } = await execPromise(command, { timeout: 300000 })
    console.log("–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ
async function extractAudio(videoPath, audioPath) {
  const command = `ffmpeg -i "${videoPath}" -vn -acodec mp3 -ab 128k "${audioPath}" -y`
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: ${command}`)

  try {
    const { stdout, stderr } = await execPromise(command, { timeout: 180000 })
    console.log("ffmpeg –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ ffmpeg:", error)
    throw error
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
function createMainMenu() {
  return Markup.keyboard([
    ["üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ"],
    ["üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É", "üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏"],
    ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ", "‚ùì –ü–æ–º–æ—â—å"],
    ["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"],
  ]).resize()
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞
function createQualityMenu() {
  return Markup.keyboard([
    ["‚≠ê 720p (–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ)", "üì± 480p (–ë—ã—Å—Ç—Ä–æ–µ)"],
    ["üíæ 360p (–≠–∫–æ–Ω–æ–º–∏—è)", "üî• 1080p (–ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–≤–æ–ª—è–µ—Ç)"],
    ["üöÄ –ê–≤—Ç–æ (–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ)", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
  ]).resize()
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏
function createMusicSearchMenu() {
  return Markup.keyboard([
    ["üé§ –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é", "üéµ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"],
    ["üéº –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é + –Ω–∞–∑–≤–∞–Ω–∏–µ", "üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏"],
    ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
  ]).resize()
}

// –ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –º–µ–Ω—é
bot.start((ctx) => {
  const musicFeature = ACRCLOUD_CONFIG.access_key
    ? "‚Ä¢ üé∂ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ –∫–∞–∫ –≤ Shazam\n‚Ä¢ üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –∏ –Ω–∞–∑–≤–∞–Ω–∏—é"
    : "‚Ä¢ üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –∏ –Ω–∞–∑–≤–∞–Ω–∏—é"

  const welcomeMessage = `
üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç!

üåü –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
${musicFeature}

üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
YouTube, TikTok, Instagram, Twitter, Facebook, VK –∏ 1000+ –¥—Ä—É–≥–∏—Ö!

üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ:`

  ctx.reply(welcomeMessage, createMainMenu())
})

// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
bot.command("help", (ctx) => {
  const musicHelp = ACRCLOUD_CONFIG.access_key
    ? `
üé∂ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏:
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è

üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏:
‚Ä¢ üé§ –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é - –≤—Å–µ –ø–µ—Å–Ω–∏ –∞—Ä—Ç–∏—Å—Ç–∞
‚Ä¢ üéµ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é - –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–µ—Å–Ω—é  
‚Ä¢ üéº –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å + –Ω–∞–∑–≤–∞–Ω–∏–µ
‚Ä¢ üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏ - –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ö–∏—Ç—ã`
    : `
üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏:
‚Ä¢ üé§ –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é - –≤—Å–µ –ø–µ—Å–Ω–∏ –∞—Ä—Ç–∏—Å—Ç–∞
‚Ä¢ üéµ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é - –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–µ—Å–Ω—é  
‚Ä¢ üéº –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å + –Ω–∞–∑–≤–∞–Ω–∏–µ
‚Ä¢ üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏ - –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ö–∏—Ç—ã`

  const helpMessage = `
üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞:

üé• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ"
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ

üéµ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—É–¥–∏–æ:
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ MP3 —Ñ–∞–π–ª (128 kbps)
${musicHelp}

‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:
‚Ä¢ ‚≠ê 720p - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ)
‚Ä¢ üì± 480p - –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
‚Ä¢ üíæ 360p - –≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞
‚Ä¢ üî• 1080p - –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–≤–æ–ª—è–µ—Ç
‚Ä¢ üöÄ –ê–≤—Ç–æ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä

‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
‚Ä¢ –í–∏–¥–µ–æ –¥–æ 45 –ú–ë –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∫–∞–∫ –≤–∏–¥–µ–æ
‚Ä¢ –ë–æ–ª—å—à–µ 45 –ú–ë - –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 2 –ì–ë (–ª–∏–º–∏—Ç Telegram)
‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏: –¥–æ 60 —Å–µ–∫—É–Ω–¥

üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:
YouTube, TikTok, Instagram, Twitter, Facebook, VK –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ!`

  ctx.reply(helpMessage, createMainMenu())
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("voice", async (ctx) => {
  if (!ACRCLOUD_CONFIG.access_key) {
    return ctx.reply("‚ùå –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.", createMainMenu())
  }

  const session = userSessions.get(ctx.from.id) || {}

  if (session.action === "recognize_music") {
    await handleMusicRecognition(ctx, "voice")
  } else {
    ctx.reply(
      "üé∂ –Ø –ø–æ–ª—É—á–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n" +
        '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É, –Ω–∞–∂–º–∏—Ç–µ "üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–Ω–æ–≤–∞.',
      createMainMenu(),
    )
  }
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
bot.on("audio", async (ctx) => {
  if (!ACRCLOUD_CONFIG.access_key) {
    return ctx.reply("‚ùå –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.", createMainMenu())
  }

  const session = userSessions.get(ctx.from.id) || {}

  if (session.action === "recognize_music") {
    await handleMusicRecognition(ctx, "audio")
  } else {
    ctx.reply(
      "üé∂ –Ø –ø–æ–ª—É—á–∏–ª –∞—É–¥–∏–æ—Ñ–∞–π–ª!\n\n" +
        '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É, –Ω–∞–∂–º–∏—Ç–µ "üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª —Å–Ω–æ–≤–∞.',
      createMainMenu(),
    )
  }
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–º–µ–Ω—é)
bot.on("text", async (ctx) => {
  const text = ctx.message.text
  const userId = ctx.from.id
  const session = userSessions.get(userId) || {}

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
  if (text === "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ") {
    ctx.reply(
      `üì• –†–µ–∂–∏–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n` +
        `–¢–µ–∫—É—â–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${session.quality || "720p (–∞–≤—Ç–æ)"}\n\n` +
        `–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.\n` +
        `–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏.`,
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "download_video", quality: session.quality || "720" })
    return
  }

  if (text === "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ") {
    ctx.reply(
      "üéµ –†–µ–∂–∏–º –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ.\n" +
        "–ê—É–¥–∏–æ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3 (128 kbps).",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "extract_audio" })
    return
  }

  if (text === "üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É") {
    if (!ACRCLOUD_CONFIG.access_key) {
      return ctx.reply("‚ùå –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.", createMainMenu())
    }

    ctx.reply(
      "üé∂ –†–µ–∂–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
        "üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª\n" +
        "üéµ –Ø –æ–ø—Ä–µ–¥–µ–ª—é –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è\n" +
        "‚è± –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 —Å–µ–∫—É–Ω–¥\n\n" +
        "üí° –î–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –±–µ–∑ —à—É–º–æ–≤.",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "recognize_music" })
    return
  }

  if (text === "üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏") {
    ctx.reply(
      "üîç –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏:\n\n" +
        "üé§ **–ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é** - –Ω–∞–π—Ç–∏ –≤—Å–µ –ø–µ—Å–Ω–∏ –∞—Ä—Ç–∏—Å—Ç–∞\n" +
        "üéµ **–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é** - –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–µ—Å–Ω—é\n" +
        "üéº **–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫** - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å + –Ω–∞–∑–≤–∞–Ω–∏–µ\n" +
        "üî• **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏** - –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ö–∏—Ç—ã\n\n" +
        "üí° –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n" +
        "‚Ä¢ –ü–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é: `Billie Eilish`\n" +
        "‚Ä¢ –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é: `Shape of You`\n" +
        "‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: `Ed Sheeran - Perfect`",
      createMusicSearchMenu(),
    )
    return
  }

  if (text === "üé§ –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é") {
    ctx.reply(
      "üé§ –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –µ–≥–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤.\n\n" +
        "üí° –ü—Ä–∏–º–µ—Ä—ã:\n" +
        "‚Ä¢ `Billie Eilish`\n" +
        "‚Ä¢ `The Weeknd`\n" +
        "‚Ä¢ `–ú–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω`\n" +
        "‚Ä¢ `–î–∏–º–∞ –ë–∏–ª–∞–Ω`",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "search_by_artist" })
    return
  }

  if (text === "üéµ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é") {
    ctx.reply(
      "üéµ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç—Ä–µ–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞.\n\n" +
        "üí° –ü—Ä–∏–º–µ—Ä—ã:\n" +
        "‚Ä¢ `Shape of You`\n" +
        "‚Ä¢ `Bad Guy`\n" +
        "‚Ä¢ `–ú–æ–∫—Ä—ã–µ –∫—Ä–æ—Å—Å—ã`\n" +
        "‚Ä¢ `–î–µ—Å–ø–∞—Å–∏—Ç–æ`",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "search_by_title" })
    return
  }

  if (text === "üéº –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é + –Ω–∞–∑–≤–∞–Ω–∏–µ") {
    ctx.reply(
      "üéº –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" +
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å - –ù–∞–∑–≤–∞–Ω–∏–µ`\n\n" +
        "üí° –ü—Ä–∏–º–µ—Ä—ã:\n" +
        "‚Ä¢ `Ed Sheeran - Perfect`\n" +
        "‚Ä¢ `Billie Eilish - Bad Guy`\n" +
        "‚Ä¢ `–ú–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω - Cadillac`\n" +
        "‚Ä¢ `The Weeknd - Blinding Lights`",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "search_combined" })
    return
  }

  if (text === "üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏") {
    await handlePopularTracks(ctx)
    return
  }

  if (text === "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ") {
    ctx.reply(
      "‚ÑπÔ∏è –†–µ–∂–∏–º –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n" + "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
      createMainMenu(),
    )
    userSessions.set(userId, { ...session, action: "video_info" })
    return
  }

  if (text === "‚ùì –ü–æ–º–æ—â—å") {
    const musicHelp = ACRCLOUD_CONFIG.access_key
      ? `
üé∂ <b>–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏:</b>
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è

üîç <b>–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏:</b>
‚Ä¢ üé§ –ü–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é - –≤—Å–µ –ø–µ—Å–Ω–∏ –∞—Ä—Ç–∏—Å—Ç–∞
‚Ä¢ üéµ –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é - –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–µ—Å–Ω—é  
‚Ä¢ üéº –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å + –Ω–∞–∑–≤–∞–Ω–∏–µ
‚Ä¢ üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏`
      : `
üîç <b>–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏:</b>
‚Ä¢ üé§ –ü–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é - –≤—Å–µ –ø–µ—Å–Ω–∏ –∞—Ä—Ç–∏—Å—Ç–∞
‚Ä¢ üéµ –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é - –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–µ—Å–Ω—é  
‚Ä¢ üéº –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π - –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å + –Ω–∞–∑–≤–∞–Ω–∏–µ
‚Ä¢ üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏`

    return ctx.replyWithHTML(
      `
üìñ <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞:</b>

üé• <b>–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:</b>
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ

üéµ <b>–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—É–¥–∏–æ:</b>
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üéµ –ò–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ"
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
${musicHelp}

‚öôÔ∏è <b>–ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:</b>
‚Ä¢ üöÄ –ê–≤—Ç–æ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
‚Ä¢ ‚≠ê 720p - –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
‚Ä¢ üì± 480p - –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
‚Ä¢ üíæ 360p - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä

‚ö†Ô∏è <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>
‚Ä¢ –§–∞–π–ª—ã –¥–æ 45 –ú–ë –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∫–∞–∫ –≤–∏–¥–µ–æ
‚Ä¢ –ë–æ–ª—å—à–µ 45 –ú–ë - –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 2 –ì–ë (–ª–∏–º–∏—Ç Telegram)

üåê <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:</b>
YouTube, TikTok, Instagram, Twitter, Facebook, VK –∏ 1000+ –¥—Ä—É–≥–∏—Ö!`,
      createMainMenu(),
    )
  }

  if (text === "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞") {
    ctx.reply(
      `‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:\n\n` +
        `–¢–µ–∫—É—â–µ–µ: ${session.quality || "720"}p\n\n` +
        `üöÄ –ê–≤—Ç–æ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞\n` +
        `‚≠ê 720p - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n` +
        `üì± 480p - –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ\n` +
        `üíæ 360p - –≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞\n` +
        `üî• 1080p - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ (–µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–≤–æ–ª—è–µ—Ç)`,
      createQualityMenu(),
    )
    return
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—á–µÔøΩÔøΩ—Ç–≤–∞
  if (text.includes("1080p")) {
    userSessions.set(userId, { ...session, quality: "1080" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 1080p (–±—É–¥–µ—Ç –ø–æ–Ω–∏–∂–µ–Ω–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –±–æ–ª—å—à–æ–π)", createMainMenu())
    return
  }
  if (text.includes("720p")) {
    userSessions.set(userId, { ...session, quality: "720" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 720p (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ)", createMainMenu())
    return
  }
  if (text.includes("480p")) {
    userSessions.set(userId, { ...session, quality: "480" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 480p (–±—ã—Å—Ç—Ä–æ–µ)", createMainMenu())
    return
  }
  if (text.includes("360p")) {
    userSessions.set(userId, { ...session, quality: "360" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ: 360p (—ç–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞)", createMainMenu())
    return
  }
  if (text.includes("–ê–≤—Ç–æ")) {
    userSessions.set(userId, { ...session, quality: "auto" })
    ctx.reply("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)", createMainMenu())
    return
  }

  if (text === "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é") {
    ctx.reply("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", createMainMenu())
    userSessions.delete(userId)
    return
  }

  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /, –Ω–æ —ç—Ç–æ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
  if (text.startsWith("/")) {
    return ctx.reply("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.", createMainMenu())
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  if (session.action === "search_by_artist") {
    await handleMusicSearch(ctx, text, "artist")
    return
  }

  if (session.action === "search_by_title") {
    await handleMusicSearch(ctx, text, "title")
    return
  }

  if (session.action === "search_combined") {
    await handleMusicSearch(ctx, text, "combined")
    return
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–æ–π
  if (!isValidUrl(text)) {
    return ctx.reply(
      "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.\n\n" + "–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:",
      createMainMenu(),
    )
  }

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  if (session.action === "download_video") {
    await handleVideoDownload(ctx, text, session.quality || "720")
  } else if (session.action === "extract_audio") {
    await handleAudioExtraction(ctx, text)
  } else if (session.action === "video_info") {
    await handleVideoInfo(ctx, text)
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    ctx.reply("üí° –Ø –≤–∏–∂—É —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:", createMainMenu())
  }
})

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏
async function handleMusicSearch(ctx, query, searchType) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("üîç –ò—â—É –º—É–∑—ã–∫—É... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 10 —Å–µ–∫—É–Ω–¥.")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    let results = []

    // –û—á–∏—â–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
    const cleanQuery = query.trim().replace(/[^\w\s-]/g, "")

    if (!cleanQuery) {
      throw new Error("–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å")
    }

    switch (searchType) {
      case "artist":
        // –ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
        results = await searchArtistTopTracks(cleanQuery, 10)
        break

      case "title":
        // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        results = await searchMusicItunes(cleanQuery, "song", 10)
        break

      case "combined":
        // –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫
        results = await searchMusicItunes(cleanQuery, "song", 10)
        break

      default:
        results = await searchMusicItunes(cleanQuery, "song", 10)
    }

    const formattedResults = formatSearchResults(results, searchType)

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, formattedResults, {
      parse_mode: "Markdown",
      disable_web_page_preview: true,
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞
    userSessions.delete(ctx.from.id)
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏."

    if (error.message.includes("timeout")) {
      errorMessage = "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    } else if (error.message.includes("network")) {
      errorMessage = "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    } else if (error.message.includes("–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å")) {
      errorMessage = "‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å."
    }

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, errorMessage)
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
    userSessions.delete(ctx.from.id)
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤
async function handlePopularTracks(ctx) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("üî• –ó–∞–≥—Ä—É–∂–∞—é –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏...")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    const results = await getPopularTracks()
    const formattedResults = formatSearchResults(results, "popular")

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, formattedResults, {
      parse_mode: "Markdown",
      disable_web_page_preview: true,
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤:", error)

    const errorMessage = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, errorMessage)
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏
async function handleMusicRecognition(ctx, type) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("üé∂ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∞—É–¥–∏–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥.")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    let fileId, duration
    if (type === "voice") {
      fileId = ctx.message.voice.file_id
      duration = ctx.message.voice.duration
    } else if (type === "audio") {
      fileId = ctx.message.audio.file_id
      duration = ctx.message.audio.duration
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    if (duration > MAX_AUDIO_DURATION_FOR_RECOGNITION) {
      return ctx.reply(
        `‚ùå –ê—É–¥–∏–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ: ${duration} —Å–µ–∫—É–Ω–¥\n` +
          `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${MAX_AUDIO_DURATION_FOR_RECOGNITION} —Å–µ–∫—É–Ω–¥\n\n` +
          `–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞–ø–∏—Å—å.`,
        createMainMenu(),
      )
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –æ—Ç Telegram
    const file = await ctx.telegram.getFile(fileId)
    const fileUrl = `https://api.telegram.org/file/bot${BOT_TOKEN}/${file.file_path}`

    // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    const timestamp = Date.now()
    const originalPath = path.join(tempDir, `original_${timestamp}.ogg`)
    const convertedPath = path.join(tempDir, `converted_${timestamp}.wav`)

    console.log(`–°–∫–∞—á–∏–≤–∞–µ–º –∞—É–¥–∏–æ —Ñ–∞–π–ª: ${fileUrl}`)

    const response = await axios({
      method: "GET",
      url: fileUrl,
      responseType: "stream",
    })

    const writer = fs.createWriteStream(originalPath)
    response.data.pipe(writer)

    await new Promise((resolve, reject) => {
      writer.on("finish", resolve)
      writer.on("error", reject)
    })

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        processingMessage.message_id,
        null,
        "üé∂ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –∞—É–¥–∏–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è...",
      )
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∞—É–¥–∏–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    await convertAudioForRecognition(originalPath, convertedPath)

    // –ß–∏—Ç–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    const audioBuffer = fs.readFileSync(convertedPath)

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        processingMessage.message_id,
        null,
        "üé∂ –†–∞—Å–ø–æ–∑–Ω–∞—é –º—É–∑—ã–∫—É —á–µ—Ä–µ–∑ ACRCloud...",
      )
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –†–∞—Å–ø–æ–∑–Ω–∞–µ–º –º—É–∑—ã–∫—É
    const result = await recognizeMusic(audioBuffer)

    console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:", JSON.stringify(result, null, 2))

    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cleanupFiles(originalPath)
    cleanupFiles(convertedPath)

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (result.status && result.status.code === 0 && result.metadata && result.metadata.music) {
      const music = result.metadata.music[0]
      const title = music.title || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
      const artists = music.artists ? music.artists.map((a) => a.name).join(", ") : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
      const album = music.album ? music.album.name : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
      const releaseDate = music.release_date || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
      const duration = music.duration_ms ? Math.round(music.duration_ms / 1000) : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
      const score = result.status.score || 0

      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      const durationFormatted =
        duration !== "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
          ? `${Math.floor(duration / 60)}:${(duration % 60).toString().padStart(2, "0")}`
          : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

      const resultMessage = `
üé∂ –ú—É–∑—ã–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞!

üéµ **–ù–∞–∑–≤–∞–Ω–∏–µ:** ${title}
üë§ **–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:** ${artists}
üíø **–ê–ª—å–±–æ–º:** ${album}
üìÖ **–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:** ${releaseDate}
‚è± **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** ${durationFormatted}
üìä **–¢–æ—á–Ω–æ—Å—Ç—å:** ${Math.round(score)}%

${score >= 80 ? "‚úÖ –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è" : score >= 50 ? "‚ö†Ô∏è –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è" : "‚ùå –ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è"}`

      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, resultMessage, {
        parse_mode: "Markdown",
      })

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
      await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())

      // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö
      if (music.external_metadata) {
        let linksMessage = "\nüîó **–°—Å—ã–ª–∫–∏:**\n"
        if (music.external_metadata.youtube) {
          linksMessage += `üé¨ [YouTube](${music.external_metadata.youtube.vid})\n`
        }
        if (music.external_metadata.spotify) {
          linksMessage += `üéß [Spotify](${music.external_metadata.spotify.track.external_urls.spotify})\n`
        }
        if (music.external_metadata.deezer) {
          linksMessage += `üéµ [Deezer](${music.external_metadata.deezer.track.link})\n`
        }

        if (linksMessage.length > 20) {
          await ctx.reply(linksMessage, { parse_mode: "Markdown", disable_web_page_preview: true })
        }
      }
    } else {
      // –ú—É–∑—ã–∫–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
      const errorCode = result.status ? result.status.code : "unknown"
      const errorMsg = result.status ? result.status.msg : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"

      let userMessage = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º—É–∑—ã–∫—É.\n\n"

      if (errorCode === 1001) {
        userMessage += "üîç –ú—É–∑—ã–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n"
      } else if (errorCode === 2004) {
        userMessage += "‚ö†Ô∏è –ê—É–¥–∏–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–ª–∏ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ.\n"
      } else if (errorCode === 3001) {
        userMessage += "üì± –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–º.\n"
      } else {
        userMessage += `üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${errorMsg}\n`
      }

      userMessage +=
        "\nüí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:\n" +
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å\n" +
        "‚Ä¢ –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ñ–æ–Ω–æ–≤—ã–µ —à—É–º—ã\n" +
        "‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10-60 —Å–µ–∫—É–Ω–¥\n" +
        "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç—Ä–µ–∫–∞"

      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, userMessage)
      await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    userSessions.delete(ctx.from.id)
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –º—É–∑—ã–∫–∏:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –º—É–∑—ã–∫–∏."

    if (error.message.includes("ACRCloud API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")) {
      errorMessage = "‚ùå –°–µ—Ä–≤–∏—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
    } else if (error.message.includes("timeout")) {
      errorMessage = "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    } else if (error.message.includes("network")) {
      errorMessage = "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    }

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, errorMessage)
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
    userSessions.delete(ctx.from.id)
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
async function handleVideoDownload(ctx, url, quality) {
  let processingMessage
  try {
    processingMessage = await ctx.reply(
      `‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∏–¥–µ–æ –∏ –≤—ã–±–∏—Ä–∞—é –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ...\n` +
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 3 –º–∏–Ω—É—Ç.\n\n" +
        `üìä –ó–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${quality}p\n` +
        `ü§ñ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞`,
    )
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    const videoInfo = await getVideoInfo(url)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const timestamp = Date.now()
    const videoFileName = `video_${timestamp}.%(ext)s`
    const videoPath = path.join(tempDir, videoFileName)

    console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: ${url}`)
    console.log(`–ó–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${quality}p`)
    console.log(`–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${videoInfo.duration} —Å–µ–∫—É–Ω–¥`)

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        processingMessage.message_id,
        null,
        `‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...\nüìπ ${videoInfo.title.substring(0, 50)}...\n‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${Math.floor(videoInfo.duration / 60)}:${(videoInfo.duration % 60).toString().padStart(2, "0")}`,
      )
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Ä–∞–∑–º–µ—Ä–∞
    const result = await downloadVideoWithSizeControl(url, videoPath, quality, MAX_VIDEO_SIZE_MB)

    if (!result.success) {
      throw new Error(result.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")
    }

    const { actualPath, sizeMB, quality: actualQuality, asDocument, platform } = result

    console.log(`–ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${sizeMB.toFixed(2)} –ú–ë –≤ –∫–∞—á–µ—Å—Ç–≤–µ ${actualQuality}p`)

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        processingMessage.message_id,
        null,
        `üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...\nüíæ –†–∞–∑–º–µ—Ä: ${sizeMB.toFixed(2)} –ú–ë\nüìä –ö–∞—á–µ—Å—Ç–≤–æ: ${actualQuality}p`,
      )
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const cleanTitle = videoInfo.title
      .replace(/[^\w\s-]/g, "") // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      .replace(/\s+/g, "_") // –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
      .substring(0, 50) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É

    const caption =
      `‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ!\n\n` +
      `üìπ ${videoInfo.title}\n` +
      `üë§ ${videoInfo.uploader}\n` +
      `üìä –ö–∞—á–µ—Å—Ç–≤–æ: ${actualQuality}p\n` +
      `üíæ –†–∞–∑–º–µ—Ä: ${sizeMB.toFixed(2)} –ú–ë` +
      (actualQuality !== quality
        ? `\n\nü§ñ –ö–∞—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å ${quality}p –¥–æ ${actualQuality}p`
        : "")

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    if (asDocument || sizeMB > MAX_VIDEO_SIZE_MB) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç
      await ctx.replyWithDocument(
        {
          source: actualPath,
          filename: `${cleanTitle}_${actualQuality}p.mp4`,
        },
        {
          caption: caption + `\n\nüí° –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑-–∑–∞ —Ä–∞–∑–º–µ—Ä–∞`,
          reply_markup: createMainMenu().reply_markup,
        },
      )
    } else {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –≤–∏–¥–µ–æ
      await ctx.replyWithVideo(
        { source: actualPath },
        {
          caption,
          reply_markup: createMainMenu().reply_markup,
        },
      )
    }

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    cleanupFiles(actualPath)

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.deleteMessage(processingMessage.message_id)
    } catch (deleteError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ")
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ."

    if (error.message.includes("403") || error.message.includes("Forbidden")) {
      errorMessage = "‚ùå –î–æ—Å—Ç—É–ø –∫ –≤–∏–¥–µ–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∏—Ç–µ –∞—É–¥–∏–æ."
    } else if (error.message.includes("Video unavailable")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ."
    } else if (error.message.includes("Unsupported URL")) {
      errorMessage = "‚ùå –î–∞–Ω–Ω—ã–π —Å–∞–π—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."
    } else if (error.message.includes("—Ä–∞–∑–º–µ—Ä")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –¥–∞–∂–µ –≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ."
    } else if (error.message.includes("TikTok") || error.message.includes("tiktok")) {
      errorMessage = "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å TikTok –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∏—Ç–µ –∞—É–¥–∏–æ."
    } else if (error.message.includes("format")) {
      errorMessage = "‚ùå –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∏—Ç–µ –∞—É–¥–∏–æ."
    }

    ctx.reply(errorMessage, createMainMenu())

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.deleteMessage(processingMessage.message_id)
    } catch (deleteError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ")
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ
async function handleAudioExtraction(ctx, url) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("‚è≥ –ò–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 3 –º–∏–Ω—É—Ç.")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    const videoInfo = await getVideoInfo(url)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    const timestamp = Date.now()
    const videoFileName = `video_${timestamp}.%(ext)s`
    const videoPath = path.join(tempDir, videoFileName)

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
    const cleanTitle = videoInfo.title
      .replace(/[^\w\s-]/g, "") // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      .replace(/\s+/g, "_") // –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
      .substring(0, 50) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É

    const audioFileName = `${cleanTitle}.mp3`
    const audioPath = path.join(tempDir, audioFileName)

    console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –¥–ª—è –∞—É–¥–∏–æ: ${url}`)

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        processingMessage.message_id,
        null,
        `‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ...\nüìπ ${videoInfo.title.substring(0, 50)}...`,
      )
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –¥–ª—è –∞—É–¥–∏–æ —Å —É—á–µ—Ç–æ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    const platform = detectPlatform(url)

    if (platform === "tiktok" || platform === "instagram") {
      // –î–ª—è TikTok –∏ Instagram –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
      await downloadVideoSimple(url, videoPath)
    } else {
      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ 360p
      await downloadVideo(url, videoPath, "360")
    }

    // –ò—â–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    const files = fs.readdirSync(tempDir).filter((file) => file.startsWith(`video_${timestamp}`))

    if (files.length === 0) {
      throw new Error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    }

    const actualVideoPath = path.join(tempDir, files[0])

    try {
      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, "üéµ –ò–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ...")
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—É–¥–∏–æ
    await extractAudio(actualVideoPath, audioPath)

    const audioStats = fs.statSync(audioPath)
    const audioSizeMB = audioStats.size / (1024 * 1024)

    console.log(`–†–∞–∑–º–µ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞: ${audioSizeMB.toFixed(2)} –ú–ë`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
    if (audioSizeMB > MAX_DOCUMENT_SIZE_MB) {
      cleanupFiles(actualVideoPath)
      cleanupFiles(audioPath)
      return await ctx.reply(
        `‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: ${audioSizeMB.toFixed(2)} –ú–ë\n` +
          `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è Telegram: 2 –ì–ë\n` +
          `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–¥–µ–æ –ø–æ–∫–æ—Ä–æ—á–µ.`,
        createMainMenu(),
      )
    }

    try {
      await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, "üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∞—É–¥–∏–æ...")
    } catch (editError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    }

    const caption =
      `‚úÖ –ê—É–¥–∏–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ!\n\n` +
      `üéµ ${videoInfo.title}\n` +
      `üë§ ${videoInfo.uploader}\n` +
      `üíæ –†–∞–∑–º–µ—Ä: ${audioSizeMB.toFixed(2)} –ú–ë\n` +
      `üéß –ö–∞—á–µ—Å—Ç–≤–æ: 128 kbps MP3`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ
    if (audioSizeMB <= 50) {
      await ctx.replyWithAudio(
        { source: audioPath },
        {
          caption,
          title: videoInfo.title,
          performer: videoInfo.uploader,
          reply_markup: createMainMenu().reply_markup,
        },
      )
    } else {
      await ctx.replyWithDocument(
        {
          source: audioPath,
          filename: audioFileName,
        },
        {
          caption: caption + `\n\nüí° –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑-–∑–∞ —Ä–∞–∑–º–µ—Ä–∞`,
          reply_markup: createMainMenu().reply_markup,
        },
      )
    }

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cleanupFiles(actualVideoPath)
    cleanupFiles(audioPath)

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.deleteMessage(processingMessage.message_id)
    } catch (deleteError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ")
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ."

    if (error.message.includes("403") || error.message.includes("Forbidden")) {
      errorMessage = "‚ùå –î–æ—Å—Ç—É–ø –∫ –≤–∏–¥–µ–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω."
    } else if (error.message.includes("Video unavailable")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ."
    }

    ctx.reply(errorMessage, createMainMenu())

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try {
      await ctx.deleteMessage(processingMessage.message_id)
    } catch (deleteError) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ")
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
async function handleVideoInfo(ctx, url) {
  let processingMessage
  try {
    processingMessage = await ctx.reply("‚è≥ –ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ...")
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error)
    return
  }

  try {
    const videoInfo = await getVideoInfo(url)

    const duration = videoInfo.duration
      ? `${Math.floor(videoInfo.duration / 60)}:${(videoInfo.duration % 60).toString().padStart(2, "0")}`
      : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞
    const availableQualities = []
    if (videoInfo.formats && videoInfo.formats.length > 0) {
      const heights = [
        ...new Set(
          videoInfo.formats
            .filter((f) => f.height)
            .map((f) => f.height)
            .sort((a, b) => b - a),
        ),
      ]

      if (heights.length > 0) {
        availableQualities.push(`–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: ${heights.join("p, ")}p`)
      }
    }

    // –û—Ü–µ–Ω–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    let sizeEstimate = ""
    if (videoInfo.duration) {
      const estimatedSize720p = (videoInfo.duration * 0.5).toFixed(1) // –ü—Ä–∏–º–µ—Ä–Ω–æ 0.5 –ú–ë/–º–∏–Ω –¥–ª—è 720p
      const estimatedSize480p = (videoInfo.duration * 0.3).toFixed(1) // –ü—Ä–∏–º–µ—Ä–Ω–æ 0.3 –ú–ë/–º–∏–Ω –¥–ª—è 480p
      sizeEstimate = `\nüìä –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 720p ‚âà ${estimatedSize720p} –ú–ë, 480p ‚âà ${estimatedSize480p} –ú–ë`
    }

    const infoMessage = `
‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ:

üìπ **–ù–∞–∑–≤–∞–Ω–∏–µ:** ${videoInfo.title}
üë§ **–ê–≤—Ç–æ—Ä:** ${videoInfo.uploader}
‚è± **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** ${duration}
üåê **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** ${videoInfo.platform}
${availableQualities.length > 0 ? `üìä ${availableQualities[0]}` : ""}${sizeEstimate}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:`

    await ctx.telegram.editMessageText(ctx.chat.id, processingMessage.message_id, null, infoMessage, {
      parse_mode: "Markdown",
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", createMainMenu())
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:", error)
    ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ.", createMainMenu())
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error("–û—à–∏–±–∫–∞ –±–æ—Ç–∞:", err)
  if (ctx) {
    try {
      ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", createMainMenu())
    } catch (replyError) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:", replyError)
    }
  }
})

// –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function cleanupTempDir() {
  try {
    const files = fs.readdirSync(tempDir)
    files.forEach((file) => {
      const filePath = path.join(tempDir, file)
      fs.unlinkSync(filePath)
    })
    console.log("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")
  } catch (error) {
    console.log("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:", error)
  }
}

// –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
cleanupTempDir()

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç)
setInterval(cleanupTempDir, 15 * 60 * 1000)

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π (–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç)
setInterval(
  () => {
    console.log(`–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${userSessions.size}`)
  },
  10 * 60 * 1000,
)

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Railway
app.use(express.json())

// Health check endpoint
app.get("/", (req, res) => {
  res.send("ü§ñ Multi-functional Telegram Bot with Music Recognition and Search is running!")
})

// Webhook endpoint
app.post(`/webhook/${BOT_TOKEN}`, (req, res) => {
  bot.handleUpdate(req.body)
  res.sendStatus(200)
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)

  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    const webhookUrl = process.env.RAILWAY_STATIC_URL
      ? `https://${process.env.RAILWAY_STATIC_URL}/webhook/${BOT_TOKEN}`
      : `http://localhost:${PORT}/webhook/${BOT_TOKEN}`

    console.log(`üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: ${webhookUrl}`)
    await bot.telegram.setWebhook(webhookUrl)
    console.log("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe()
    console.log(`‚úÖ –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç @${botInfo.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!`)
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", error)

    // –ï—Å–ª–∏ webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
    console.log("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ polling...")
    try {
      await bot.telegram.deleteWebhook()
      await bot.launch()
      console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling!")
    } catch (pollingError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ polling:", pollingError)
      process.exit(1)
    }
  }
})

// Graceful shutdown
process.once("SIGINT", () => {
  console.log("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")
  bot.stop("SIGINT")
  process.exit(0)
})

process.once("SIGTERM", () => {
  console.log("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")
  bot.stop("SIGTERM")
  process.exit(0)
})
