const { Telegraf } = require("telegraf")
const { exec } = require("child_process")
const fs = require("fs")
const path = require("path")
const util = require("util")
const express = require("express")

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º exec –≤ –ø—Ä–æ–º–∏—Å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const execPromise = util.promisify(exec)

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
const BOT_TOKEN = process.env.BOT_TOKEN
if (!BOT_TOKEN) {
  console.error("‚ùå –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
  console.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Railway –∏–ª–∏ –≤ —Ñ–∞–π–ª–µ .env")
  process.exit(1)
}

console.log("‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω, –¥–ª–∏–Ω–∞:", BOT_TOKEN.length)

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new Telegraf(BOT_TOKEN)

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è webhook
const app = express()
const PORT = process.env.PORT || 3000

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
const tempDir = path.join(__dirname, "temp")
if (!fs.existsSync(tempDir)) {
  fs.mkdirSync(tempDir, { recursive: true })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function cleanupFiles(filePath) {
  try {
    if (fs.existsSync(filePath)) {
      fs.unlinkSync(filePath)
      console.log(`–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`)
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
function isValidUrl(string) {
  try {
    new URL(string)
    return true
  } catch (_) {
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é yt-dlp
async function downloadVideo(url, outputPath) {
  const command = `yt-dlp -f "best[height<=720]" --no-playlist -o "${outputPath}" "${url}"`
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: ${command}`)

  try {
    const { stdout, stderr } = await execPromise(command)
    console.log("yt-dlp stdout:", stdout)
    if (stderr) console.log("yt-dlp stderr:", stderr)
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ yt-dlp:", error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ —Å –ø–æ–º–æ—â—å—é ffmpeg
async function extractAudio(videoPath, audioPath) {
  const command = `ffmpeg -i "${videoPath}" -vn -acodec mp3 -ab 192k "${audioPath}" -y`
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: ${command}`)

  try {
    const { stdout, stderr } = await execPromise(command)
    console.log("ffmpeg stdout:", stdout)
    if (stderr) console.log("ffmpeg stderr:", stderr)
    return true
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ ffmpeg:", error)
    throw error
  }
}

// –ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
bot.start((ctx) => {
  const welcomeMessage = `
üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ!

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/video <—Å—Å—ã–ª–∫–∞> - —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ
/music <—Å—Å—ã–ª–∫–∞> - –∏–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ –≤ MP3

üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
‚Ä¢ YouTube
‚Ä¢ TikTok
‚Ä¢ Instagram
‚Ä¢ Twitter
‚Ä¢ Facebook
‚Ä¢ –ò –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ!

üí° –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
/video https://www.youtube.com/watch?v=dQw4w9WgXcQ
/music https://www.youtube.com/watch?v=dQw4w9WgXcQ

‚ö° –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!
    `

  ctx.reply(welcomeMessage)
})

// –ö–æ–º–∞–Ω–¥–∞ /help - —Å–ø—Ä–∞–≤–∫–∞
bot.help((ctx) => {
  const helpMessage = `
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:

üé• /video <—Å—Å—ã–ª–∫–∞> - –°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–æ 720p
üéµ /music <—Å—Å—ã–ª–∫–∞> - –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∞—É–¥–∏–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3 (192 kbps)

‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∞–π—Ç—ã:
‚Ä¢ YouTube (youtube.com, youtu.be)
‚Ä¢ TikTok (tiktok.com)
‚Ä¢ Instagram (instagram.com)
‚Ä¢ Twitter (twitter.com, x.com)
‚Ä¢ Facebook (facebook.com)
‚Ä¢ VK (vk.com)
‚Ä¢ –ò –±–æ–ª–µ–µ 1000 –¥—Ä—É–≥–∏—Ö —Å–∞–π—Ç–æ–≤!

‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 50 –ú–ë (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram)
‚Ä¢ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: 1-3 –º–∏–Ω—É—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞
‚Ä¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7 –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–µ–Ω

üîß –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:
1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏
2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–æ –ø—É–±–ª–∏—á–Ω–æ
3. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É
    `

  ctx.reply(helpMessage)
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /video
bot.command("video", async (ctx) => {
  const args = ctx.message.text.split(" ")

  if (args.length < 2) {
    return ctx.reply(
      "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.\n\n–ü—Ä–∏–º–µ—Ä: /video https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    )
  }

  const url = args[1]

  if (!isValidUrl(url)) {
    return ctx.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É.")
  }

  const processingMessage = await ctx.reply("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")

  try {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const timestamp = Date.now()
    const videoFileName = `video_${timestamp}.%(ext)s`
    const videoPath = path.join(tempDir, videoFileName)

    console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: ${url}`)

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    await downloadVideo(url, videoPath)

    // –ò—â–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª (yt-dlp –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ)
    const files = fs.readdirSync(tempDir).filter((file) => file.startsWith(`video_${timestamp}`))

    if (files.length === 0) {
      throw new Error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    }

    const actualVideoPath = path.join(tempDir, files[0])
    const fileStats = fs.statSync(actualVideoPath)
    const fileSizeMB = fileStats.size / (1024 * 1024)

    console.log(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSizeMB.toFixed(2)} –ú–ë`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram - 50 –ú–ë)
    if (fileSizeMB > 50) {
      cleanupFiles(actualVideoPath)
      return ctx.editMessageText(
        "‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–±–æ–ª–µ–µ 50 –ú–ë). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–¥–µ–æ –ø–æ–∫–æ—Ä–æ—á–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /music –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ.",
      )
    }

    await ctx.editMessageText("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await ctx.replyWithVideo(
      { source: actualVideoPath },
      {
        caption: "‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ!",
      },
    )

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    cleanupFiles(actualVideoPath)

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    await ctx.deleteMessage(processingMessage.message_id)
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ."

    if (error.message.includes("Video unavailable")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ."
    } else if (error.message.includes("Unsupported URL")) {
      errorMessage = "‚ùå –î–∞–Ω–Ω—ã–π —Å–∞–π—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É."
    } else if (error.message.includes("network")) {
      errorMessage = "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    }

    await ctx.editMessageText(errorMessage)
  }
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /music
bot.command("music", async (ctx) => {
  const args = ctx.message.text.split(" ")

  if (args.length < 2) {
    return ctx.reply(
      "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ.\n\n–ü—Ä–∏–º–µ—Ä: /music https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    )
  }

  const url = args[1]

  if (!isValidUrl(url)) {
    return ctx.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É.")
  }

  const processingMessage = await ctx.reply("‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏ –∏–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")

  try {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    const timestamp = Date.now()
    const videoFileName = `video_${timestamp}.%(ext)s`
    const videoPath = path.join(tempDir, videoFileName)
    const audioPath = path.join(tempDir, `audio_${timestamp}.mp3`)

    console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –¥–ª—è –∞—É–¥–∏–æ: ${url}`)

    // –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    await downloadVideo(url, videoPath)

    // –ò—â–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    const files = fs.readdirSync(tempDir).filter((file) => file.startsWith(`video_${timestamp}`))

    if (files.length === 0) {
      throw new Error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    }

    const actualVideoPath = path.join(tempDir, files[0])

    await ctx.editMessageText("üéµ –ò–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ...")

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—É–¥–∏–æ
    await extractAudio(actualVideoPath, audioPath)

    const audioStats = fs.statSync(audioPath)
    const audioSizeMB = audioStats.size / (1024 * 1024)

    console.log(`–†–∞–∑–º–µ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞: ${audioSizeMB.toFixed(2)} –ú–ë`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
    if (audioSizeMB > 50) {
      cleanupFiles(actualVideoPath)
      cleanupFiles(audioPath)
      return ctx.editMessageText("‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–±–æ–ª–µ–µ 50 –ú–ë). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–¥–µ–æ –ø–æ–∫–æ—Ä–æ—á–µ.")
    }

    await ctx.editMessageText("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∞—É–¥–∏–æ...")

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await ctx.replyWithAudio(
      { source: audioPath },
      {
        caption: "‚úÖ –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ!",
        title: `Audio_${timestamp}`,
        performer: "Video Downloader Bot",
      },
    )

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cleanupFiles(actualVideoPath)
    cleanupFiles(audioPath)

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    await ctx.deleteMessage(processingMessage.message_id)
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ:", error)

    let errorMessage = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ."

    if (error.message.includes("Video unavailable")) {
      errorMessage = "‚ùå –í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ."
    } else if (error.message.includes("Unsupported URL")) {
      errorMessage = "‚ùå –î–∞–Ω–Ω—ã–π —Å–∞–π—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É."
    } else if (error.message.includes("network")) {
      errorMessage = "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    }

    await ctx.editMessageText(errorMessage)
  }
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
bot.on("text", (ctx) => {
  const text = ctx.message.text

  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /, –Ω–æ —ç—Ç–æ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
  if (text.startsWith("/")) {
    return ctx.reply("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–æ—Å—Ç–æ —Å—Å—ã–ª–∫—É
  if (isValidUrl(text)) {
    return ctx.reply(
      "üí° –Ø –≤–∏–∂—É, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n\n/video " +
        text +
        " - –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ\n/music " +
        text +
        " - –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏–æ",
    )
  }

  // –î–ª—è –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  ctx.reply("‚ùì –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error("–û—à–∏–±–∫–∞ –±–æ—Ç–∞:", err)
  if (ctx) {
    ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
  }
})

// –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function cleanupTempDir() {
  try {
    const files = fs.readdirSync(tempDir)
    files.forEach((file) => {
      const filePath = path.join(tempDir, file)
      fs.unlinkSync(filePath)
    })
    console.log("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")
  } catch (error) {
    console.log("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:", error)
  }
}

// –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
cleanupTempDir()

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç)
setInterval(cleanupTempDir, 30 * 60 * 1000)

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Railway
app.use(express.json())

// Health check endpoint
app.get('/', (req, res) => {
  res.send('ü§ñ Telegram Video Downloader Bot is running!')
})

// Webhook endpoint
app.post(`/webhook/${BOT_TOKEN}`, (req, res) => {
  bot.handleUpdate(req.body)
  res.sendStatus(200)
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
  
  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    const webhookUrl = process.env.RAILWAY_STATIC_URL 
      ? `https://${process.env.RAILWAY_STATIC_URL}/webhook/${BOT_TOKEN}`
      : `http://localhost:${PORT}/webhook/${BOT_TOKEN}`
    
    console.log(`üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: ${webhookUrl}`)
    await bot.telegram.setWebhook(webhookUrl)
    console.log("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe()
    console.log(`‚úÖ –ë–æ—Ç @${botInfo.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!`)
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", error)
    
    // –ï—Å–ª–∏ webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
    console.log("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ polling...")
    try {
      await bot.telegram.deleteWebhook()
      await bot.launch()
      console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling!")
    } catch (pollingError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ polling:", pollingError)
      process.exit(1)
    }
  }
})

// Graceful shutdown
process.once("SIGINT", () => {
  console.log("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")
  bot.stop("SIGINT")
  process.exit(0)
})

process.once("SIGTERM", () => {
  console.log("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")
  bot.stop("SIGTERM")
  process.exit(0)
})
